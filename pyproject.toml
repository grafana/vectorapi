[tool.poetry]
name = "vectorapi"
version = "0.1.0"
description = "Vector API for embeddings."
authors = ["Grafana ML <machine-learning-ops@grafana.com>"]
readme = "README.md"
include = ["README.md"]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
asyncpg = "0.28.0"
datasets = "2.14.6"
fastapi = "0.104.1"
fastapi-route-logger-middleware = "0.2.3"
loguru = "0.7.2"
opentelemetry-api = "1.20.0"
opentelemetry-exporter-otlp-proto-grpc = "1.20.0"
opentelemetry-instrumentation-asyncpg = "0.41b0"
opentelemetry-instrumentation-fastapi = "0.41b0"
opentelemetry-instrumentation-sqlalchemy = "0.41b0"
opentelemetry-propagator-jaeger = "1.20.0"
opentelemetry-sdk = "1.20.0"
orjson = "3.9.10"
pgvector = "0.2.3"
pydantic-settings = "2.0.3"
sentence-transformers = "2.2.2"
sqlalchemy = { extras = ["asyncio"], version = "2.0.22" }
starlette-exporter = "0.16.0"
uvicorn = { extras = ["standard"], version = "0.23.2" }
torch = {url = "https://download.pytorch.org/whl/cu118/torch-2.1.0%2Bcu118-cp310-cp310-linux_x86_64.whl"}

[tool.poetry.group.dev.dependencies]
black = "23.10.1"
coverage = "7.3.2"
flake8 = "6.1.0"
httpx = "0.25.0"
mypy = "1.6.1"
pytest = "7.4.3"
pytest-asyncio = "0.22.0"
pytest-benchmark = "4.0.0"
pytest-httpx = "0.26.0"
ruff = "0.1.3"
types-orjson = "3.6.2"

[[tool.poetry.source]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"

[tool.black]
line-length = 100
target-version = ['py310', 'py311']

[tool.ruff]
line-length = 100
target-version = 'py310'

[tool.mypy]
plugins = ["pydantic.mypy"]
follow_imports = "silent"
explicit_package_bases = true
ignore_missing_imports = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
markers = ["Integration: marks tests as integration tests"]

